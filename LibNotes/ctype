The ctype.h header file of the C Standard Library declares several functions that are useful for testing and mapping characters.

All the functions accepts int as a parameter, whose value must be EOF or representable as an unsigned char.

All the functions return non-zero (true) if the argument c satisfies the condition described, and zero(false) if not.

# Library Functions

Following are the functions defined in the header ctype.h âˆ’
Sr.No. 	Function & Description
1 	    int isalnum(int c)
        This function checks whether the passed character is alphanumeric.

2 	    int isalpha(int c)
        This function checks whether the passed character is alphabetic.
3 	    int iscntrl(int c)
        This function checks whether the passed character is control character.

4 	    int isdigit(int c)
        This function checks whether the passed character is decimal digit.

5 	    int isgraph(int c)
        This function checks whether the passed character has graphical representation using locale.

6 	    int islower(int c)
        This function checks whether the passed character is lowercase letter.

7 	    int isprint(int c)
        This function checks whether the passed character is printable.

8 	    int ispunct(int c)
        This function checks whether the passed character is a punctuation character.

9 	    int isspace(int c)
        This function checks whether the passed character is white-space.

10 	    int isupper(int c)
        This function checks whether the passed character is an uppercase letter.

11 	    int isxdigit(int c)
        This function checks whether the passed character is a hexadecimal digit.

# The library also contains two conversion functions that accepts and returns an "int".
Sr.No. 	Function & Description
1 	    int tolower(int c)

This function converts uppercase letters to lowercase.
2 	    int toupper(int c)
        This function converts lowercase letters to uppercase.


# Character Classes
Sr.No. 	Character Class & Description
1 	    Digits
        This is a set of whole numbers { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 }.

2 	    Hexadecimal digits
        This is the set of { 0 1 2 3 4 5 6 7 8 9 A B C D E F a b c d e f }.

3 	    Lowercase letters
        This is a set of lowercase letters { a b c d e f g h i j k l m n o p q r s t u v w x y z }.

4 	    Uppercase letters
        This is a set of uppercase letters {A B C D E F G H I J K L M N O P Q R S T U V W X Y Z }.

5 	    Letters
        This is a set of lowercase and uppercase letters.

6 	    Alphanumeric characters
        This is a set of Digits, Lowercase letters and Uppercase letters.

7       Punctuation characters
        This is a set of ! " # $ % & ' ( ) * + , - . / : ; < = > ? @ [ \ ] ^ _ ` { | } ~

8       Graphical characters
        This is a set of Alphanumeric characters and Punctuation characters.

9 	    Space characters
        This is a set of tab, newline, vertical tab, form feed, carriage return, and space.

10 	    Printable characters
        This is a set of Alphanumeric characters, Punctuation characters and Space characters.

11 	    Control characters
        In ASCII, these characters have octal codes 000 through 037, and 177 (DEL).

12      Blank characters
        These are spaces and tabs.

13 	    Alphabetic characters
        This is a set of Lowercase letters and Uppercase letters.
